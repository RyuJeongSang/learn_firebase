{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/FbPost.js","components/PostFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","FbPost","fbPostObj","isOwner","editing","setEditing","text","newPost","setNewPost","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","PostFactory","userObj","fbPost","setFbPost","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","bachgroundImage","faTimes","Home","fbPosts","setFbPosts","useEffect","orderBy","onSnapshot","snapshot","fbPostArray","docs","map","data","marginTop","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","where","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfc49b52.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"../fBase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n        {error ? <span className=\"authError\">{error}</span> : null}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Login\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fBase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst FbPost = ({ fbPostObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newPost, setNewPost] = useState(fbPostObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"delete this?\");\n    if (ok) {\n      await dbService.doc(`fbPosts/${fbPostObj.id}`).delete();\n      await storageService.refFromURL(fbPostObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`fbPosts/${fbPostObj.id}`).update({\n      text: newPost,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewPost(value);\n  };\n  return (\n    <div className=\"fbPost\">\n      {editing && isOwner ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container fbPostEdit\">\n            <input\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Revise your mind\"\n              value={newPost}\n              required\n              autoFocus\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Edit\" className=\"formBtn\" />\n          </form>\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </button>\n        </>\n      ) : (\n        <>\n          <h4>{fbPostObj.text}</h4>\n          {fbPostObj.attachmentUrl ? (\n            <img src={fbPostObj.attachmentUrl} alt=\"photoPost\" />\n          ) : null}\n          {isOwner ? (\n            <>\n              <div className=\"fbPost__actions\">\n                <span onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            </>\n          ) : null}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FbPost;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"../fBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst PostFactory = ({ userObj }) => {\n  const [fbPost, setFbPost] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (fbPost === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const fbPostObj = {\n      text: fbPost,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"fbPosts\").add(fbPostObj);\n    setFbPost(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setFbPost(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    if (theFile) {\n      reader.readAsDataURL(theFile);\n    }\n    if (!theFile) {\n      setAttachment(\"\");\n    }\n  };\n  const onClearAttachmentClick = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={fbPost}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind\"\n          maxLength={120}\n          required\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add Photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{ opacity: 0 }}\n      />\n      {attachment ? (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            alt=\"photos\"\n            style={{ bachgroundImage: attachment }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachmentClick}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      ) : null}\n    </form>\n  );\n};\n\nexport default PostFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"../fBase\";\nimport FbPost from \"components/FbPost\";\nimport PostFactory from \"../components/PostFactory\";\n\nconst Home = ({ userObj }) => {\n  const [fbPosts, setFbPosts] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"fbPosts\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const fbPostArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setFbPosts(fbPostArray);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <PostFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {fbPosts.map((fbPost) => (\n          <FbPost\n            key={fbPost.id}\n            fbPostObj={fbPost}\n            isOwner={fbPost.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport FbPost from \"components/FbPost\";\nimport { authService, dbService } from \"../fBase\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const [fbPosts, setFbPosts] = useState([]);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  useEffect(() => {\n    dbService\n      .collection(\"fbPosts\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const fbPostArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setFbPosts(fbPostArray);\n      });\n  }, []);\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{ marginTop: 10 }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n      <div style={{ marginTop: 30 }}>\n        {fbPosts.map((fbPost) => (\n          <FbPost\n            key={fbPost.id}\n            fbPostObj={fbPost}\n            isOwner={fbPost.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName ? `${userObj.displayName}'s` : null} Profile\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"../fBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}